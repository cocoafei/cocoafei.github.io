<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>程序员的hair</title>
    <description>来自一个脱发程序员gg的分享！</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 15 Nov 2018 01:30:15 +0800</pubDate>
    <lastBuildDate>Thu, 15 Nov 2018 01:30:15 +0800</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title> iOS 通用链接(Universal Link)</title>
        <description>&lt;h2 id=&quot;ios-通用链接universal-link&quot;&gt;iOS 通用链接(Universal Link)&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Apple通用链接：&lt;/strong&gt;一种能够方便的通过传统 &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTP&lt;/code&gt; 链接来启动 APP, 使用相同的网址打开网站和APP。&lt;/p&gt;

  &lt;p&gt;通过唯一的网址, 不需要特别的schema就可以链接一个特定的视图到APP里面 。&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;比如：&lt;/strong&gt;在微信中使用了&lt;strong&gt;通用链接&lt;/strong&gt;, 那么用户在Safari、UIWebView或者 WKWebView点击一个链接, iOS设备上的微信app怎会在微信里面&lt;strong&gt;自动打开这个页面&lt;/strong&gt;, 如果&lt;strong&gt;没有安装&lt;/strong&gt;则在Safrai中&lt;strong&gt;打开响应链接&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;一系统要求&quot;&gt;一、系统要求：&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;iOS 9及以上&lt;/strong&gt;系统，iOS 9以下仍旧用&lt;strong&gt;URL Scheme&lt;/strong&gt;实现跳转。&lt;/p&gt;

&lt;h3 id=&quot;二使用方法&quot;&gt;二、使用方法：&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;在&lt;strong&gt;苹果开发者网站&lt;/strong&gt;中打开需要使用&lt;code class=&quot;highlighter-rouge&quot;&gt;Universal Link&lt;/code&gt;功能的App中的&lt;code class=&quot;highlighter-rouge&quot;&gt;Associated Domains&lt;/code&gt;。&lt;/li&gt;
  &lt;li&gt;创建一个json格式的&lt;code class=&quot;highlighter-rouge&quot;&gt;apple-app-site-associatio&lt;/code&gt;,上传&lt;code class=&quot;highlighter-rouge&quot;&gt;apple-app-site-association&lt;/code&gt;到服务器根目录下。&lt;/li&gt;
  &lt;li&gt;在&lt;strong&gt;AppDelegate&lt;/strong&gt;中实现相应的方法。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;三对比url-scheme&quot;&gt;三、对比URL Scheme&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;由&lt;code class=&quot;highlighter-rouge&quot;&gt;其他应用&lt;/code&gt;跳转到App或App对应界面，或跳转到其他App&lt;code class=&quot;highlighter-rouge&quot;&gt;仍旧使用URL Scheme&lt;/code&gt;。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Universal Link&lt;/code&gt;适用于&lt;code class=&quot;highlighter-rouge&quot;&gt;App跳转功能&lt;/code&gt;，且待跳转功能配置文件存储在服务器，更加灵活。&lt;/li&gt;
  &lt;li&gt;App已经安装的前提下：直接&lt;code class=&quot;highlighter-rouge&quot;&gt;启动App&lt;/code&gt;然后现实链接内容。&lt;/li&gt;
  &lt;li&gt;App没有安装的前提下：Web上&lt;code class=&quot;highlighter-rouge&quot;&gt;继续显示&lt;/code&gt;链接内容。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;四参数以及安全性&quot;&gt;四、参数以及安全性&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;由于路径完全是&lt;strong&gt;自定义&lt;/strong&gt;的，自由度很高，可以通过拼接路径的方式&lt;strong&gt;带参数&lt;/strong&gt;；例如/path/x/parameter。&lt;/li&gt;
  &lt;li&gt;未安装App会直接在浏览器中继续打开链接，因此不能够带&lt;strong&gt;敏感信息&lt;/strong&gt;。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;五注意点&quot;&gt;五、注意点&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;首先你的&lt;strong&gt;服务器&lt;/strong&gt;必须得&lt;strong&gt;支持SSL&lt;/strong&gt;，必须支持&lt;strong&gt;HTTPS&lt;/strong&gt;；我们只需要把配置好的json文件上传到服务器中该域名的根目录下，言下之意，我们可以用&lt;strong&gt;GET请求&lt;/strong&gt;可以获取到https://www.example.com/apple-app-association；当我们的App在设备上第一次运行时，如果支持&lt;strong&gt;Associated Domains&lt;/strong&gt;功能，那么iOS会&lt;strong&gt;自动&lt;/strong&gt;去GET定义的Domain下的apple-app-site-association文件。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;服务器上apple-app-site-association的更新不会让iOS本地的apple-app-site-association&lt;code class=&quot;highlighter-rouge&quot;&gt;同步更新&lt;/code&gt;，即iOS只会在App第一次启动时&lt;code class=&quot;highlighter-rouge&quot;&gt;请求一次&lt;/code&gt;，以后除非App更新或重新安装，否则不会在每次打开时请求apple-app-site-association。&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;非系统原生App&lt;/code&gt;不一定能支持直接点击URL跳转，例如在微信中点击URL会首先在微信内的WebView打开，如果要跳转只能再通过Safari打开。&lt;/li&gt;
  &lt;li&gt;从9.3.X改版之后，通用链接不支持&lt;code class=&quot;highlighter-rouge&quot;&gt;域内跳转&lt;/code&gt;了，跳转前后的两个domain必须是不同的，否则只会safari打开。跨域问题：假设当前网页的地址为 yoursite.com/a/*，如果要跳转的链接也是 yoursite.com/a/* 这个域下的，系统将不会进行拉起应用的操作，必须要跳转不同的子域，例如 yoursite.com/b/* 时，系统才会根据关联文件去判断是否要拉起应用。&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sat, 20 May 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/05/20/iOS-%E9%80%9A%E7%94%A8%E9%93%BE%E6%8E%A5(Universal-Link).html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/05/20/iOS-%E9%80%9A%E7%94%A8%E9%93%BE%E6%8E%A5(Universal-Link).html</guid>
        
        <category>iOS</category>
        
        
      </item>
    
      <item>
        <title>MacShell脚本批处理</title>
        <description>&lt;p&gt;在Mac电脑上最常用的&lt;strong&gt;批处理脚本&lt;/strong&gt;就是Shell了，就像在Windows电脑上常用的Batch文件。收集开发中常用到的Shell脚本，如下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Mac使用Shell处理图片
    &lt;ul&gt;
      &lt;li&gt;一键缩放图片生成App所有尺寸icon图标&lt;/li&gt;
      &lt;li&gt;一键缩放图片生成App所需启动图&lt;/li&gt;
      &lt;li&gt;一键将文件夹内图片生成1x/2x/3x图片并自动重命名&lt;/li&gt;
      &lt;li&gt;一键将文件夹内所有图片转为PNG格式&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;利用Shell脚本自动化打ipa包&lt;/li&gt;
  &lt;li&gt;将.app文件转换为.ipa文件&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;一shell脚本简要用法&quot;&gt;一、Shell脚本简要用法:&lt;/h2&gt;

&lt;p&gt;在Mac的终端中，cd打开图片文件夹—&amp;gt;拖入Shell文件到终端—&amp;gt;回车–&amp;gt;输入1或2或3或4即可进行对应操作,如图&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/muzipiao/GitHubImages/blob/master/CreateiPhoneIconShellBlogImages/1.png&quot; alt=&quot;这里写图片描述&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;二shell脚本用法示例以createiphoneiconshellsh为例&quot;&gt;二、Shell脚本用法示例(以CreateiPhoneIconShell.sh为例):&lt;/h2&gt;

&lt;h3 id=&quot;21例如你要处理的图片文件放在桌面上的images文件中&quot;&gt;2.1、例如你要处理的图片文件放在桌面上的&lt;code class=&quot;highlighter-rouge&quot;&gt;images&lt;/code&gt;文件中&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/muzipiao/GitHubImages/blob/master/CreateiPhoneIconShellBlogImages/2.png&quot; alt=&quot;这里写图片描述&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;22把要作为图标的图片命名为icon&quot;&gt;2.2、把要作为图标的图片命名为icon&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/muzipiao/GitHubImages/blob/master/CreateiPhoneIconShellBlogImages/3.png&quot; alt=&quot;图片展示图片源自网络&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;23需要在终端中用cd命令先进入此文件夹终端输入cd空格cd后面有一个空格然后拖入你桌面的images文件夹&quot;&gt;2.3、需要在终端中用cd命令先进入此文件夹，终端输入cd空格(cd后面有一个空格)，然后拖入你桌面的&lt;code class=&quot;highlighter-rouge&quot;&gt;images&lt;/code&gt;文件夹&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/muzipiao/GitHubImages/blob/master/CreateiPhoneIconShellBlogImages/4.png&quot; alt=&quot;这里写图片描述&quot; /&gt;
&lt;img src=&quot;https://github.com/muzipiao/GitHubImages/blob/master/CreateiPhoneIconShellBlogImages/5.png&quot; alt=&quot;这里写图片描述&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;24同理再拖入所用到的shell文件然后回车确认&quot;&gt;2.4、同理，再拖入所用到的Shell文件，然后回车确认&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/muzipiao/GitHubImages/blob/master/CreateiPhoneIconShellBlogImages/6.png&quot; alt=&quot;这里写图片描述&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;25显示界面如下如果需要生成appicon图标则输入数字1回车&quot;&gt;2.5、显示界面如下，如果需要生成AppIcon图标，则输入数字1，回车&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/muzipiao/GitHubImages/blob/master/CreateiPhoneIconShellBlogImages/7.png&quot; alt=&quot;这里写图片描述&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;26jpg与png注意点&quot;&gt;2.6、JPG与PNG注意点：&lt;/h3&gt;

&lt;p&gt;由于我在网上找到的是&lt;code class=&quot;highlighter-rouge&quot;&gt;JPG&lt;/code&gt;图片，转为&lt;code class=&quot;highlighter-rouge&quot;&gt;PNG&lt;/code&gt;图片后，&lt;code class=&quot;highlighter-rouge&quot;&gt;Alpha通道&lt;/code&gt;颜色异常，所以有&lt;code class=&quot;highlighter-rouge&quot;&gt;CGColor&lt;/code&gt;颜色警告，正常&lt;code class=&quot;highlighter-rouge&quot;&gt;PNG&lt;/code&gt;图片处理是没有&amp;lt;…&amp;gt;部分的，有警告但不影响使用。
&lt;img src=&quot;https://github.com/muzipiao/GitHubImages/blob/master/CreateiPhoneIconShellBlogImages/8.png&quot; alt=&quot;这里写图片描述&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;三注意点&quot;&gt;三、注意点&lt;/h2&gt;

&lt;h3 id=&quot;31生成appicon注意点苹果官方要求png格式&quot;&gt;3.1、生成AppIcon注意点(苹果官方要求&lt;code class=&quot;highlighter-rouge&quot;&gt;PNG&lt;/code&gt;格式)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;图片名称需要为&lt;strong&gt;icon.png&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;尺寸目前包括40×40 58×58 60×60 80×80 87×87 120×120 180×180&lt;/li&gt;
  &lt;li&gt;如果需要特殊尺寸，在下方的for循环处添加相应的数字即可&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/muzipiao/GitHubImages/blob/master/CreateiPhoneIconShellBlogImages/9.png&quot; alt=&quot;这里写图片描述&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;32生成app启动图片launchimage注意点苹果官方要求png格式&quot;&gt;3.2、生成App启动图片LaunchImage注意点(苹果官方要求&lt;code class=&quot;highlighter-rouge&quot;&gt;PNG&lt;/code&gt;格式)&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;iPhone屏幕尺寸一览&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;iPhone 6Plus/6SPlus/7Plus (Retina HD 5.5 @3x): 1242 x 2208&lt;/strong&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;iPhone 6/6S/7 (Retina HD 4.7 @2x): 750 x 1334&lt;/strong&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;iPhone 5/5S(Retina 4 @2x): 640 x 1136&lt;/strong&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;iPhone 4/4S(@2x): 640 x 960&lt;/strong&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;要作为启动图片的名称需要为LaunchImage.png；&lt;/li&gt;
  &lt;li&gt;目前按照屏幕尺寸默认生成尺寸为960x640，1134x640，1334x750，2208x1242；&lt;/li&gt;
  &lt;li&gt;如果需要其他尺寸，方法同上，自己到Shell文件中修改相应尺寸数字即可。&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-Shell&quot;&gt;
#&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;一键生成App启动图片LaunchImage&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;
#自动生成LaunchImage
LaunchWithSize() {
case $1 in
&quot;960&quot;)
sips -z 960 640 LaunchImage.png --out LaunchImageFolder/LaunchImage_960x640.png
;;

&quot;1136&quot;)
sips -z 1136 640 LaunchImage.png --out LaunchImageFolder/LaunchImage_1134x640.png
;;

&quot;1334&quot;)
sips -z 1334 750 LaunchImage.png --out LaunchImageFolder/LaunchImage_1334x750.png
;;

&quot;2208&quot;)
sips -z 2208 1242 LaunchImage.png --out LaunchImageFolder/LaunchImage_2208x1242.png
;;
esac
}

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;33批量生成1x2x3x图片&quot;&gt;3.3、批量生成1x，2x，3x图片&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;将当前文件夹下所有图片缩放为1x，2x，3x图片，并自动命名&lt;/li&gt;
  &lt;li&gt;注意：如果icon.png和LaunchImage.png也在当前图片文件下，也会生成1x，2x，3x图片&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;34批量将图片转为png格式&quot;&gt;3.4、批量将图片转为PNG格式&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;会将当前文件夹下所有图片转换为PNG格式；&lt;/li&gt;
  &lt;li&gt;注意，用Shell脚本和用苹果图片预览工具另存为转换，都是仅仅转换图片格式，简单的将缺失Alpha通道色都补为1，体积会变大；&lt;/li&gt;
  &lt;li&gt;例如JPEG图片格式，只包含RGB通道颜色，体积小，适合网络传输和打印；而PNG图片格式，除了包含RGB颜色外，还包含Alpha透明通道；&lt;/li&gt;
  &lt;li&gt;PNG图片格式是苹果官方推荐的格式，因为iOS系统会用到大量的透明效果，而且PNG图片支持硬解码，使界面更流畅。&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;p&gt;如果您觉得有所帮助，请在&lt;a href=&quot;https://github.com/muzipiao/MacShell&quot;&gt;GitHub&lt;/a&gt;上赏个Star ⭐️，您的鼓励是我前进的动力。&lt;/p&gt;

&lt;h2 id=&quot;shell脚本截图&quot;&gt;Shell脚本截图&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/muzipiao/GitHubImages/master/CreateiPhoneIconShellBlogImages/10.png&quot; alt=&quot;Shell脚本截图&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 21 Mar 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2016/03/21/MacShell%E8%84%9A%E6%9C%AC%E6%89%B9%E5%A4%84%E7%90%86.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/03/21/MacShell%E8%84%9A%E6%9C%AC%E6%89%B9%E5%A4%84%E7%90%86.html</guid>
        
        <category>Shell</category>
        
        
      </item>
    
  </channel>
</rss>
